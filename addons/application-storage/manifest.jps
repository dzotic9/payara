{
  "jpsType": "update",
  "application": {
    "name": "Application Storage",
    "homepage": "https://github.com/jelastic-jps/payara/tree/master/addons/application-storage",
    "description": "Deploying application archive and attaching storage to compute nodeGroup",
    "onInstall": [
      {
        "call": "add-storage"
      },
      {
        "installAddon": {
          "id": "mount-storage-addon",
          "nodeGroup": "cp"
        }
      }
    ],
    "addons": [
      {
        "id": "mount-storage-addon",
        "onInstall": [
          {
            "call": [
              "deploy-war",
              "mount-storage"
            ]
          },
          {
            "restartContainers": {
              "nodeGroup": "cp"
            }
          }
        ]
      }
    ],
    "procedures": [
      {
        "id": "add-storage",
        "onCall": {
          "addNodes": {
            "nodeType": "docker",
            "cloudlets": 16,
            "dockerName": "jelastic/storage",
            "dockerTag": "latest",
            "displayName": "Storage",
            "nodeGroup": "storage",
            "metadata": {
              "layer": "storage"
            }
          }
        }
      },
      {
        "id": "deploy-war",
        "onCall": {
          "execCmd": {
            "nodeGroup": "storage",
            "commands": [
              "mkdir /deployment",
              "wget https://goo.gl/EQ2ynB -O /deployment/ROOT.war >> /var/log/run.log 2>&1",
              "wget https://github.com/jelastic-jps/payara/raw/master/addons/load-testing/lib/RAM-Loader.war -O /deployment/ram.war >> /var/log/run.log 2>&1",
              "wget https://github.com/jelastic-jps/payara/raw/master/addons/load-testing/lib/CPU-Loader.war -O /deployment/cpu.war >> /var/log/run.log 2>&1"
              ]
          }
        }
      },
      {
        "id": "mount-storage",
        "onCall": {
          "execScript": {
            "type": "js",
            "script": "https://github.com/jelastic-jps/payara/raw/master/addons/application-storage/mount-storage.js",
            "params": {
              "mountTo": "cp",
              "mountFrom": "${nodes.storage.first.id}"
            }
          }
        }
      }
    ]
  }
}
